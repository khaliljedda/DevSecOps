pipeline {
    agent any

  environment {
    dockerimagename = "khalil4/employee-app-back"               //docker-pipeline plugin
    dockerImage = ""
  }
      tools {nodejs "Node"
           }
      
        stages {
            stage('Cloning Git') {
                steps {
                    git([url: 'https://github.com/khaliljedda/DevSecOps.git', branch: 'frontend'])
        }}

        stage(' test ') {
            steps {    
                echo 'testing the application ....'   
            }
        }

        stage(' Build ') {
            steps {   
                 dir(path: 'Front/') {
           
                sh 'npm install'
                sh 'npm run build'              
            script {
                 dockerImage = docker.build dockerimagename
        }            
            }
         
        } }
 
      /*   stage('Publish image to Docker Hub') {
            steps {
                withDockerRegistry([ credentialsId: 'dockerhub_id', url: '' ]) {
                  dockerImage.push("latest")
                }
            }
        } */
       /*  stage('Deploying App to Kubernetes') {
            steps {
                script {
                 kubernetesDeploy(configs: "deploymentservice.yml", kubeconfigId: "kubernetes")
             }
      }
    } */
        }
    }
7